%FILE internal/func-13.html
%LASTMOD
%KEY pgsql-func13

%TITLE <a href="https://www.postgresql.org/docs/current/functions-info.html#FUNCTIONS-INFO-CATALOG-TABLE" target="_blank" rel="noopener noreferrer">システムカタログ情報関数</a>

<table border=1>
<caption>システムカタログ情報関数</caption>
<tr bgcolor="#cccccc">
<th>関数</th>				<th>返り値型</th>	<th>説明</th>

</tr><tr>

<td>format_type(type_oid, typemod)</td>	<td>text</td>	<td>データ型のSQL名の取得</td>
</tr><tr>

<td>pg_basetype(regtype)</td>	<td>regtype</td>	<td>Returns the OID of the base type of a domain identified by its type OID。詳細は公式ドキュメント参照。バージョン17から</td>
</tr><tr>

<td>pg_char_to_encoding(encoding_name)</td>	<td>integer</td>	<td></td>
</tr><tr>
<td>pg_char_to_char(encoding_int)</td>	<td>name</td>	<td></td>
</tr><tr>
<td>pg_get_catalog_foreign_keys()</td>	<td>setof record (fktable regclass, fkcols text[], pktable regclass, pkcols text[], is_array boolean, is_opt boolean )</td>	<td></td>
</tr><tr>
<td>pg_get_constraintdef(constraint_oid [,pretty_bool])</td>	<td>text</td>	<td>制約の定義を取得</td>
</tr><tr>
<td>pg_get_expr(expr_text, relation_oid, pretty_bool)</td>	<td>text</td>	<td>式中のいかなるVarも、２番目のパラメータによって指定されるリレーションを参照すると仮定して、式の内部形式を逆コンパイル</td>
</tr><tr>
<td>pg_get_functiondef(func_oid)</td>	<td>text</td>	<td>関数定義の取得</td>
</tr><tr>
<td>pg_get_function_arguments(func_oid)</td>	<td>text</td>	<td>関数定義（デフォルト値付き）の引数リストを取得</td>
</tr><tr>
<td>pg_get_function_identity_arguments(func_oid)</td>	<td>text</td>	<td>関数（デフォルト値の付いていない）特定の引数リストを取得</td>
</tr><tr>
<td>pg_get_function_result(func_oid)</td>	<td>text</td>	<td>関数に対するRETURNS句の取得</td>
</tr><tr>
<td>pg_get_indexdef(index_oid [,column_no, pretty_bool])</td>	<td>text</td>	<td>インデックスに対するCREATE INDEXコマンドの取得、またはcolumn_noが非ゼロの場合は、１つのインデックス列のみの定義の取得</td>
</tr><tr>
<td>pg_get_keywords()</td>	<td>setof record ( word text, catcode "char", barelabel boolean, catdesc text, baredesc text )</td>	<td>SQLキーワードとそれらの種類のリストを取得</td>
</tr><tr>

<td>pg_get_partkeydef(table oid)</td>	<td>text</td>	<td>Reconstructs the definition of a partitioned table's partition key, in the form it would have in the PARTITION BY clause of CREATE TABLE. Since PG16</td>
</tr><tr>


<td>pg_get_ruledef(rule_oid [,pretty_bool])</td>	<td>text</td>	<td>ルールに対するCREATE RULEコマンドを取得</td>
</tr><tr>
<td>pg_get_serial_sequence(table_name, column_name)</td>	<td>text</td>	<td>serialまたはbigserial列が使用するシーケンス名の取得</td>
</tr><tr>
<td>pg_get_statisticsobjdef(statobj_oid)</td>	<td>text</td>	<td></td>
</tr><tr>
<td>pg_get_triggerdef(trigger_oid [,prety_bool])</td>	<td>text</td>	<td>トリガに対するCREATE [ CONSTRAINT ] TRIGGERコマンドの取得</td>
</tr><tr>
<td>pg_get_userbyid(role_oid)</td>	<td>name</td>	<td>与えられたOIDでロール名を取得</td>
</tr><tr>
<td>pg_get_viewdef(view_name [,pretty_bool])</td>	<td>text</td>	<td>ビューに対する現在のSELECTコマンドを取得（廃止予定）</td>
</tr><tr>
<td>pg_get_viewdef(view_oid [,pretty_bool])</td>	<td>text</td>	<td>ビューに対する現在のSELECTコマンドを取得</td>
</tr><tr>
<td>pg_get_viewdef(view_oid, wrap_column_int)</td>	<td>text</td>	<td></td>
</tr><tr>
<td>pg_get_viewdef (view+text[,pretty_bool])</td>	<td>text</td>	<td></td>
</tr><tr>
<td>pg_index_column_has_property(index_regclass,column_int,property_text)</td>	<td>boolean</td>	<td></td>
</tr><tr>
<td>pg_index_has_property(index_regclass, property_text)</td>	<td>boolean</td>	<td></td>
</tr><tr>
<td>pg_indexam_has_property(am_oid, property_text)</td>	<td>boolean</td>	<td></td>
</tr><tr>
<td>pg_options_to_table(options_array_text[])</td>	<td>setof record(option_name, option_value)</td>	<td></td>
</tr><tr>
<td>pg_settings_get_flags(guc_text)</td>	<td>text[]</td>	<td></td>
</tr><tr>
<td>pg_tablespace_databases(tablespace_oid)</td>	<td>setof oid</td>	<td>テーブル空間内にオブジェクトを所有するデータベースOID集合を取得</td>
</tr><tr>
<td>pg_tablespace_location(tablespace_oid)</td>	<td>text</td>	<td></td>
</tr><tr>
<td>pg_typeof("any")</td>	<td> regtype</td>	<td>指定した値のデータ型を取得</td>
</tr><tr>
<td>to_regclass(text)</td>	<td>regclass</td>	<td></td>
</tr><tr>
<td>to_regcollation(text)</td>	<td>regcollation</td>	<td></td>
</tr><tr>
<td>to_regnamespace(text)</td>	<td>regnamespace</td>	<td></td>
</tr><tr>
<td>to_regoper(text)</td>	<td>regoper</td>	<td></td>
</tr><tr>
<td>to_regoperator(text)</td>	<td>regoperator</td>	<td></td>
</tr><tr>
<td>to_regproc(text)</td>	<td>regproc</td>	<td></td>
</tr><tr>
<td>to_regprocedure(text)</td>	<td>regprocedure</td>	<td></td>
</tr><tr>
<td>to_regrole(text)</td>	<td>regrole</td>	<td></td>
</tr><tr>
<td>to_regtype(text)</td>	<td>regtype</td>	<td></td>

</tr><tr>
<td>to_regtypemod(text)</td>	<td>integer</td>	<td>バージョン17から</td>

</tr></table>

<br>

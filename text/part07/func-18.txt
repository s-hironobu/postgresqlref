%FILE internal/func-18.html
%LASTMOD
%KEY pgsql-func18

%TITLE <a href="https://www.postgresql.org/docs/current/functions-admin.html#FUNCTIONS-RECOVERY-CONTROL" target="_blank" rel="noopener noreferrer">リカバリ制御関数</a>


[<リカバリ情報関数一覧>]

<table><tr bgcolor="#cccccc">
<th>関数</th>							<th>返り値型</th>	<th>説明</th>	<th>実行側　　</th>
</tr><tr>
<td>pg_is_in_recovery()		</td>	<td>boolean	</td>	<td>リカバリ中ならばtrueを返す</td>	<td>マスタ<br>/スレーブ</td>

</tr><tr>
<td>pg_last_wal_receive_location()	</td>	<td>text	</td>	<td>受信してHDDに書き込んだWALログのLSN</td>	<td>スレーブ</td>

</tr><tr>
<td>pg_last_wal_replay_location()	</td>	<td>text	</td>	<td>受信してHDDに書き込み、さらに再生(replay)したWALログのLSN</td>	<td>スレーブ</td>

</tr><tr>
<td>pg_last_xact_replay_timestamp()	    </td>	<td>timestamp with TZ	</td>	<td>再生(replay)したWALログが、マスタ側で実行された時刻</td>	<td>スレーブ</td>

</tr><tr>
<td>pg_get_wal_resource_managers()</td>	<td>setof record(rm_id, rm_name, rm_builtin)</td>	<td></td>	<td></td>

</tr></table>

<br>

[<リカバリ制御関数一覧>]


<table><tr bgcolor="#cccccc">
<th>関数</th>							<th>返り値型</th>	<th>説明</th>	<th>実行側</th>
</tr><tr>
<td>pg_is_wal_replay_paused()</td>	<td>boolean</td>	<td>再生(replay)が停止中であればtrueを返す</td>	<td>スレーブ</td>

</tr><tr>
<td>pg_get_wal_replay_pause_state()</td>	<td>text</td>	<td></td>	<td></td>

</tr><tr>
<td>pg_promote(wait boolean DEFAULT true, wait_seconds integer DEFAULT 60)</td>	<td>text</td>	<td></td>	<td></td>

</tr><tr>
<td>pg_wal_replay_pause()	</td>	<td>void</td>	<td>即座に再生(replay)を停止する</td>	<td>スレーブ</td>

</tr><tr>
<td>pg_wal_replay_resume()	</td>	<td>void</td>	<td>再生(replay)停止中であれば再開する </td>	<td>スレーブ</td>


</tr></table>

<br>


%CHAPTER 解説


<p>
・pg_start_backup()、pg_stop_backup()、pg_create_restore_point()
<br>
ベースバックアップを取得するための関数である。使い方は<a href="./admin-19.html">[<5-02>]</a>を参照。
</p>


<p>
・pg_xlogfile_name_offset()、pg_xlogfile_name()、pg_xlog_location_diff()
<br>
LSN(Log Sequence Number)からWALログのファイル名やオフセットを得る。
これらはWALログの管理用関数である。
</p>

<pre>
sampledb=# SELECT pg_xlogfile_name_offset('0/F000074');
    pg_xlogfile_name_offset
--------------------------------
 (00000001000000000000000F,116)
(1 row)

sampledb=# SELECT pg_xlogfile_name('0/F000074');
     pg_xlogfile_name
--------------------------
 00000001000000000000000F
(1 row)

sampledb=# SELECT pg_xlog_location_diff('0/F0001B0', '0/F000074');
 pg_xlog_location_diff
-----------------------
                   316
(1 row)
</pre>


<p>
・pg_last_xlog_receive_location()
<br>
pg_last_xlog_receive_location()は受信してHDDに書き込んだWALログのLSNを返す。"receive"という関数名と異なるので注意。
<br>

</p>


<p>
・pg_xlog_replay_pause()、pg_xlog_replay_resume()
<br>
これらの関数を使うと、スレーブ側で明示的に再生(replay)を停止できる。
</p>



%FILE internal/func-10.html
%LASTMOD
%KEY pgsql-func10

%TITLE <a href="https://www.postgresql.org/docs/current/functions-info.html#FUNCTIONS-INFO-SESSION-TABLE" target="_blank" rel="noopener noreferrer">セッション情報関数</a>

<table><tr bgcolor="#cccccc">
<th>関数</th>			<th>返り値型</th>	<th>説明</th>
</tr><tr>
<td>current_catalog	</td>	<td>name</td>	<td>現在接続しているデータベース名を返す</td>
</tr><tr>
<td>current_database()	</td>	<td>name</td>	<td>現在接続しているデータベース名を返す</td>
</tr><tr>
<td>current_query()</td>	<td>name</td>	<td>現在実行中のSQLを返す</td>
</tr><tr>
<td>current_role()	</td>	<td>name	</td>	<td>現在のロール名を返す。current_userと同じ。</td>
</tr><tr>
<td>current_schema	</td>	<td>name	</td>	<td>現在のスキーマ名を返す</td>
</tr><tr>
<td>current_schema()	</td>	<td>name	</td>	<td>current_schemaと同じ</td>
</tr><tr>
<td>current_schemas(boolean)</td>	<td>name[]	</td>	<td>引数がtrueならば検索パス内のすべてのスキーマ名、falseならカレントのスキーマ名を返す</td>
</tr><tr>
<td>current_user</td>	<td>name	</td>	<td>現在のロール名を返す</td>
</tr><tr>
<td>inet_client_addr()	</td>	<td>inet	</td>	<td>リモート接続のアドレスを返す。UNIXドメイン接続の場合はNULL</td>
</tr><tr>
<td>inet_client_port()	</td>	<td>int	</td>	<td>リモート接続のポートを返す。UNIXドメイン接続の場合はNULL</td>
</tr><tr>
<td>inet_server_addr()	</td>	<td>inet	</td>	<td>ローカル接続のアドレスを返す。UNIXドメイン接続の場合はNULL</td>
</tr><tr>
<td>inet_server_port()	</td>	<td>int	</td>	<td>ローカル接続のポートを返す。UNIXドメイン接続の場合はNULL</td>
</tr><tr>
<td>pg_backend_pid()	</td>	<td>int	</td>	<td>現在のセッションを実行しているサーバのプロセスID</td>
</tr><tr>
<td>pg_blocking_pids(pid)	</td>	<td>integer[]	</td>	<td>バックエンドpidのLOCK取得をブロックしているプロセスのPID群を返す。</td>
</tr><tr>
<td>pg_conf_load_time()	</td>	<td>timestamp</td>	<td>設定を読み込んだ時刻</td>
</tr><tr>
<td>pg_current_logfile([format])	</td>	<td>text	</td>	<td>フォーマット[stderr|csvlog|jsonlog]の現在のログファイル名を返す。デフォルトは'stderr'</td>
</tr><tr>
<td>pg_get_loaded_modules()	</td>	<td>setof record	</td>	<td>読み込んでいるモジュールのリストを返す。PG18から</td>
</tr><tr>
<td>pg_my_temp_schema()	</td>	<td>oid	</td>	<td>セッションの一時スキーマのOID。もしなければ０</td>
</tr><tr>
<td>pg_is_other_temp_schema(oid)</td>	<td>boolean		</td>	<td>スキーマが他のセッションの一時スキーマかどうか否か</td>
</tr><tr>
<td>pg_jit_available()	</td>	<td>boolean	</td>	<td>JITが有効か否か</td>
</tr><tr>
<td>pg_numa_available()	</td>	<td>boolean	</td>	<td>NUMAが有効か否か。PG18から</td>
</tr><tr>
<td>pg_listening_channels()</td>	<td>setof text</td>	<td>今のセッションにおいて現在LISTEN中のチャンネル名</td>
</tr><tr>
<td>pg_notification_queue_usage()	</td>	<td>double precision	</td>	<td>非同期通知キューの最大サイズのうち、処理待ちの通知によって占められている現在の割合(0から1まで)を返す</td>
</tr><tr>
<td>pg_postmaster_start_time()</td>	<td>timestamp</td>	<td>postmasterの開始時刻を返す</td>
</tr><tr>
<td>pg_safe_snapshot_blocking_pids(pid)	</td>	<td>integer[]	</td>	<td>バックエンドpidのスナップショット取得をブロックしているプロセスのPID群を返す。</td>
</tr><tr>
<td>pg_trigger_depth()	</td>	<td>int	</td>	<td>トリガーの入れ子の深さを返す。</td>
</tr><tr>
<td>session_user</td>	<td>name</td>	<td>データベースに接続したロール名を返す</td>

</tr><tr>
<td>system_user</td>	<td>text</td>	<td>認証方式などの情報を返す。バージョン16から。</td>

</tr><tr>
<td>user</td>	<td>name</td>	<td>current_userと等価</td>
</tr><tr>
<td>version()	</td>	<td>text</td>	<td>PostgreSQLのバージョンを返す</td>

</tr><tr>
<td>unicode_version()	</td>	<td>text</td>	<td>PostgreSQLのバージョンをUnicodeで返す。バージョン17から</td>
</tr><tr>
<td>icu_unicode_version()	</td>	<td>text</td>	<td>PostgreSQLのバージョンをicu_unicodeで返す。バージョン17から</td>

</tr></table>

<br>


%CHAPTER 解説

<p>
・session_user、current_user
<br>
関数session_userはデータベースに接続したときのロール名を返します。
関数current_userは現時点でのロール名を返します。
<br>
SET ROLE文などで別のロールに成り変わった場合、session_userの返す値は変わりませんが、current_userの返す値は新しいロール名になります。
</p>

<p>
・current_schemas()
<br>
関数current_schemas()で検索パス内のすべてのスキーマ名を表示します。
他方、メタコマンド\dnはPostgreSQLサーバ内のすべてのスキーマ名を列挙します。
</p>

<p>
・pg_postmaster_start_time(), pg_conf_loadl_time(), pg_backend_pid()
<br>
サーバ側の情報を得るためのいくつかの関数が用意されています。
</p>

%CHAPTER 実行例

<p>
・関数current_schemasの実行例
</p>

<pre>
sampledb=# SELECT current_schemas(true);
   current_schemas
---------------------
 {pg_catalog,public}
(1 row)

sampledb=# SELECT current_schemas(false);
 current_schemas
-----------------
 {public}
(1 row)

sampledb=# \dn
        List of schemas
        Name        |  Owner
--------------------+----------
 information_schema | postgres
 my_schema          | postgres
 pg_catalog         | postgres
 pg_toast           | postgres
 public             | postgres
(5 rows)
</pre>
<br>

<p>
・pg_postmaster_start_time(), pg_conf_loadl_time(), pg_backend_pid()の実行例
</p>

<pre>
sampledb=# SELECT pg_postmaster_start_time(), pg_conf_load_time(), pg_backend_pid();
   pg_postmaster_start_time    |       pg_conf_load_time       | pg_backend_pid
-------------------------------+-------------------------------+----------------
 2011-05-19 12:01:11.965922+09 | 2011-05-19 12:01:11.439937+09 |          29847
(1 row)
</pre>
<br>

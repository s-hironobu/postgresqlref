
%FILE internal/psql-04.html
%LASTMOD
%KEY pgsql-psql04


%TITLE コマンドラインからSQL実行



<pre>
[<書式>]
psql [ options ] db_name

</pre>

<br>


<table>
<caption>オプション</caption>
<tr bgcolor="#cccccc">
<th>オプション</th>	<th>説明</th>
</tr><tr>
<td>-c query_string</td>	<td>query_stringを実行し、終了</td>
</tr><tr>
<td>-f batch_file</td>	<td>ファイル(batch_file)中のSQL文を処理(バッチ処理する) </td>
</tr><tr>
<td>-o out_file</td>	<td>すべての問い合わせの出力をファイル(out_file)に書き込む</td>
</tr><tr>
<td>-L out_file</td>	<td>すべての問い合わせの出力を通常の出力先に出力し、さらにファイルout_fileに書き込む</td>
</tr></table>

<br>


%CHAPTER 解説

<p>
・-c オプション
<br>
指定したSQL文を実行して終了します。
</p>

<p>
・-f オプション
<br>
バッチ処理を行います。
バッチ処理終了後、psqlは終了します。
<br>
バッチファイルのSQL文はシーケンシャルに実行します。
<u>SQL文に誤りがあっても処理は終了しない</u>ので注意してください。
誤りがあればそのSQL文をスキップし、次のSQL文を実行します。
</p>

<p>
・-o オプション, -L オプション
<br>
実行したSQL文の結果をファイルに逐次書き込むには、-oオプションを使います(通常はstdout:標準出力)。
<br>
出力をファイルから標準出力に戻すには、引数なしで\oメタコマンド(<a href="psql-05.html">[<5-05>]</a>)を実行します。
</p>

<p>
-oオプションはSQL文の結果をファイルにのみ書き込み、標準出力には出力しません。
よってpsqlの表示画面上でSQL文の結果を確認できません。
<br>
-Lオプションは画面にも表示するので、結果を確認できます。
</p>

%CHAPTER 実行例

<p>
・SQL文の実行
<br>
psqlを対話モードでなく、コマンドラインで実行します。
</p>

<pre>
postgres> psql -U postgres sampledb -c "SELECT * FROM author_list WHERE author_id < 3"
 author_id |       name
-----------+------------------
         1 | ドストエフスキー
         2 | 夏目漱石
(2 rows)
</pre>

<p>
・バッチファイルの実行
<br>
バッチファイルbatch.sqlを実行します。\iメタコマンド(<a href="psql-05.html">[<5-05>]</a>)も参照してください。
</p>

<pre>
postgres> cat batch.sql
--
-- batch file
--
SELECT count(*) FROM book_list;
INSERT INTO book_list VALUES('100年の孤独', 7);
SELECT count(*) FROM book_list;
</pre>

<pre>
postgres> psql sampledb -U postgres -f batch.sql
 count
-------
     8
(1 row)

INSERT 0 1
 count
-------
     9
(1 row)
</pre>

<p>
ファイル名として"-"(ハイフン)を設定した場合は、標準入力からSQL文を読み込みます。
</p>

<pre>
postgres> cat ./batch.sql | psql sampledb -U postgres -f -
</pre>

<p>
・問い合わせ結果をファイルに出力
<br>
ファイルresult.outに問い合わせ結果を出力します。
ここでファイルを読みやすくするために\qechoメタコマンド([<5-10>])でコメント文を入れました。
</p>

<pre>
postgres> psql -U postgres sampledb -q -t -o result.out
sampledb=# \qecho Result of "SELECT * FROM book_list WHERE author_id < 3"
sampledb=# SELECT * FROM book_list WHERE author_id < 3;
sampledb=# \qecho Result of "SELECT count(*) FROM book_list"
sampledb=# SELECT count(*) FROM book_list;
sampledb=# \o		   	← 結果を標準出力に書き出すように指
sampledb=# SELECT count(*) FROM book_list;
     9

sampledb=# \q
</pre>

<p>
ファイルresult.outの中身を示します。
(引数のない)\oメタコマンド実行後、SQL文の結果は標準出力に表示され、result.outには書き込まれていないことに注意してください。
</p>

<pre>
postgres> cat result.out
Result of "SELECT * FROM book_list WHERE author_id < 3"
 カラマーゾフの兄弟 |         1
 罪と罰             |         1
 我輩は猫である     |         2
 夢十夜             |         2
 倫敦塔             |         2

Result of "SELECT count(*) FROM book_list"
     9
</pre>

<p>
・-L オプション
<br>
-Lオプションの使用例です。
</p>

<pre>
postgres> psql -q -L result.out sampledb
sampledb=# SELECT * FROM book_list WHERE author_id < 3;
       title        | author_id
--------------------+-----------
 カラマーゾフの兄弟 |         1
 罪と罰             |         1
 我輩は猫である     |         2
 夢十夜             |         2
 倫敦塔             |         2
(5 rows)

sampledb=# SELECT count(*) FROM book_list;
 count
-------
     9
(1 row)

sampledb=# \q
</pre>

<p>
SQL文の結果は、ファイルに書き込まれると同時に画面にも表示されます。
<br>
ファイルresult.outの内容を表示します。
</p>

<pre>
postgres> cat result.out
********* QUERY **********
SELECT * FROM book_list WHERE author_id < 3;
**************************

       title        | author_id
--------------------+-----------
 カラマーゾフの兄弟 |         1
 罪と罰             |         1
 我輩は猫である     |         2
 夢十夜             |         2
 倫敦塔             |         2
(5 rows)

********* QUERY **********
SELECT count(*) FROM book_list;
**************************

 count
-------
     9
(1 row)
</pre>

<p>
上に示すように、実行したSQL文と結果がファイルに書き込まれていることが確認できます。
</p>

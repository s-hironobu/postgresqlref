%FILE internal/admin-09.html
%LASTMOD
%KEY pgsql-admin09

%TITLE 権限について

<p>
PostgreSQLの権限はロールに関する権限と、オブジェクトに関する権限の2つに分類できます。
</p>

%CHAPTER <a href="https://www.postgresql.org/docs/current/role-attributes.html" target="_blank" rel="noopener noreferrer">ロールの権限/属性</a>


<p>
ロールに与える権限と属性を以下に示します([<表3-04>]参照)。
表中の[デフォルト]はCREATE ROLE文でロールを作成した際、デフォルトで付与する権限や属性値です。
</p>

<table>
<caption> [<表3-04>]ロールの権限/属性</caption>
<tr bgcolor="#cccccc">
<th>権限/属性　　　　　　　　　　</th>	<th>デフォルト　　　　</th> <th></th>	<th>権限/属性　　　　　　　　　　</th>	<th>デフォルト　　　　</th>
</tr><tr>
<td>スーパーユーザ</td>	<td>false</td>	<td></td>	<td>ロールの継承</td>	<td>true</td>
</tr><tr>
<td>ログイン権限</td>	<td>false</td>	<td></td>	<td>パスワード</td>	<td>無制限</td>
</tr><tr>
<td>ロール作成</td>	<td>false</td>	<td></td>	<td>パスワードの有効期限</td>	<td>無制限</td>
</tr><tr>
<td>データベース作成</td>	<td>false</td>	<td></td>	<td>最大接続数</td>	<td>無制限</td>
</tr><tr>
<td>レプリケーション</td>	<td>false</td>	<td></td>	<td></td>	<td></td>
</tr></table>

<br>

<p>
システムカタログのpg_rolesでロールの権限や属性を表示できます(データベースユーザの場合はpg_user)。
</p>

<pre>
sampledb=# \x
Expanded display is on.
sampledb=# SELECT rolname, rolsuper, rolinherit, rolcreaterole,
       rolcreatedb, rolcanlogin, rolconnlimit
          FROM pg_roles WHERE rolname LIKE 'postgres';
-[ RECORD 1 ]-+---------
rolname       | postgres
rolsuper      | t
rolinherit    | t
rolcreaterole | t
rolcreatedb   | t
rolcanlogin   | t
rolconnlimit  | -1
</pre>

<br>

<p>
・スーパーユーザ
<br>
CREATE ROLE文やALTER ROLE文に'SUPERUSER'オプションを設定するとそのロールはスーパーユーザ権限を持ちます。
</p>

<pre>
ALTER ROLE role_name SUPERUSER;
</pre>

<br>

<p>
厳密には「スーパーユーザ権限」が存在するのでなく、「権限検査しない＝すべての権限を持つ」ロールをスーパーユーザと呼びます。
</p>

<p>
・データベース作成権限
<br>
スーパーユーザを除き、データベースを作成するにはデータベース作成権限が必要です。
</p>

<p>
・パスワード属性
<br>
データベース接続時の認証に用います。
</p>

<p>
データベースユーザ/ロールの権限を表示するには、メタコマンド\duを使います。
</p>

<pre>
sampledb=# \du postgres
List of roles
-[ RECORD 1 ]----------------------------------------------
Role name  | postgres
Attributes | Superuser, Create role, Create DB, Replication
Member of  | {}
</pre>

<br>

%CHAPTER  <a href="https://www.postgresql.org/docs/current/ddl-priv.html" target="_blank" rel="noopener noreferrer">データベースオブジェクトの権限</a>


<p>
PostgreSQLにおける"データベースオブジェクト"とは、データベースやテーブル、関数などを総称したものです([<脚注1>])。
ここでは、テーブルの検索権限や更新権限などをまとめて"データベースオブジェクトの権限"とよぶことにします。
<br>
[<表3-05>]に、データベースオブジェクトの権限一覧を示します。
</p>

<blockquote><table BORDER="1"><tr><td>脚注1</td><td>
開発当初、PostgreSQL内部でデータベースやテーブル、関数などを"オブジェクト"として一貫した扱いを目指したため、これらをデータベースオブジェクトと呼んでいます。
</td></tr></table></blockquote>


<table border=0>
<caption> [<表3-05>] データベースオブジェクトの権限一覧</caption>
<tr>
<td colspan=4>

対象オブジェクト:<br>
d = データベース, t = テーブル, c = カラム, v = ビュー, s = シーケンス, S = スキーマ, f = 関数,  l = 手続き言語
</td>

</tr><tr bgcolor="#cccccc">
<th>権限</th>		<th>略号</th>	<th>対象オブジェクト</th>	<th>説明</th>
</tr><tr>
<td>SELECT</td>	<td>r	</td>	<td>t,c,v,s	</td>	<td>テーブル(カラム)/ビューへの問い合わせ、シーケンスへのSELECT、COPY FROM文の実行</td>
</tr><tr>
<td>INSERT</td>	<td>a	</td>	<td>t,c,v,s	</td>	<td>テーブル(カラム)へのデータ挿入、COPY TO文の実行</td>
</tr><tr>
<td>UPDATE</td>	<td>w	</td>	<td>t,c,v,s	</td>	<td>テーブル(カラム)の更新、シーケンスの使用(関数nextval(), currval(), setval())</td>
</tr><tr>
<td>DELETE</td>	<td>d	</td>	<td>t		</td>	<td>テーブルのデータの削除</td>
</tr><tr>
<td>TRUNCATE</td><td>D	</td>	<td>t		</td>	<td>テーブルのTRUNCATE。バージョン8.4から</td>
</tr><tr>
<td>RULE</td>	<td>R	</td>	<td>t,v,s	</td>	<td>テーブル/ビューへのルール定義(CREATE RULE文)の実行</td>
</tr><tr>
<td>REFERENCES</td>	<td>x	</td>	<td>t	</td>	<td>外部キー制約を持つテーブルの作成</td>
</tr><tr>
<td>TRIGGER</td>	<td>t	</td>	<td>t	</td>	<td>テーブルに対するトリガ定義(CREATE TRIGGER文)の実行</td>
</tr><tr>
<td>CREATE</td>	<td>C	</td>	<td>t,v,S	</td>	<td>テーブル、ビュー、スキーマの作成</td>
</tr><tr>
<td>TEMP,TEMPORARY</td>	<td>T	</td>	<td>d	</td>	<td>一時テーブルの作成</td>
</tr><tr>
<td>EXECUTE</td>	<td>X	</td>	<td>f	</td>	<td>関数や演算子の使用</td>
</tr><tr>
<td>USAGE	</td>	<td>U	</td>	<td>l,S	</td>	<td>手続き言語での関数作成、もしくはスキーマ内部のオブジェクトへのアクセス</td>


</tr><tr>
<td>SET</td>	<td>s	</td>	<td>	</td>	<td>設定パラメータの設定</td>

</tr><tr>
<td>ALTER SYSTEM</td>	<td>A	</td>	<td>	</td>	<td><a href="https://www.postgresql.org/docs/current/sql-altersystem.html" target="_blank" rel="noopener noreferrer">ALTER SYSTEM</a>で変更するシステムパラメータの設定</td>

</tr><tr>
<td>MAINTAIN</td>	<td>m	</td>	<td>t	</td>	<td>VACUUM, ANALYZE, CLUSTER, REFRESH MATERIALIZED VIEW, REINDEX, LOCK TABLEの実行。バージョン17から</td>

</tr><tr>
<td>ALL, ALL PRIVILEGES</td>	<td>なし</td>	<td>d,t,v,s,S,f,l</td>	<td>すべての権限</td>
</tr></table>

<br>


<p>
各オブジェクトの権限は、以下に示すメタコマンドで表示できます([<表3-06>])。
</p>

<table border=1>
<caption> [<表3-06>] 権限を表示するメタコマンド</caption>
<tr bgcolor="#cccccc">
<th>メタコマンド</th>	<th>権限表示するオブジェクト</th>
</tr><tr>
<td>\dp [pattern]</td>	<td>patternに指定したオブジェクト</td>
</tr><tr>
<td>\db+</td>	<td>テーブルスペース</td>
</tr><tr>
<td>\l</td>	<td>データベース</td>
</tr><tr>
<td>\dn+</td>	<td>スキーマ</td>
</tr><tr>
<td>\z</td>	<td>すべてのテーブル、ビュー、シーケンス</td>
</tr></table>

<br>

<p>
権限表示の書式は次のとおりです。
</p>

[<権限表示の書式>]
<pre>
	ユーザorロール = 権限の列 / 設定者, ...
</pre>

<p>
ここで権限は[<表3-05>]の略号で表します。また略号の後に"*"がある場合は「他のユーザorロールにその権限を与える権限も持っている」ことを示します([<脚注2>])。
<br>
例えば、下に示すテーブルpostgres_tableの権限は[<表3-07>]のように解釈します。
</p>

<blockquote><table BORDER="1"><tr><td>脚注2</td><td>
この権限を与えるにはGRANT文(<a href="./sql-14.html">[<6-14>]</a>,<a href="./sql-15.html">[<6-15>]</a>)でWITH GRANT OPTIONを設定します。
</td></tr></table></blockquote>


<pre>
sampledb=> \z pgbench_accounts
Access privileges
-[ RECORD 1 ]------------+----------------------------
Schema                   | public
Name                     | pgbench_accounts
Type                     | table
Access privileges        | postgres=arwdDxt/postgres
                         | role1=r*w*/postgres
Column access privileges | aid:
                         |   role2=r/role1
                         | bid:
                         |   role2=r/role1
</pre>

<br>

<table border=1>
<caption> [<表3-07>] 権限の解釈例</caption>
<tr bgcolor="#cccccc">
<th>権限の例</th>	<th>解釈</th>
</tr><tr>
<td>postgres=arwdDxt/postgres <sup> ※1</sup>
</td>	<td>	postgresはa=INSERT, r=SELECT, w=UPDATE, d=DELETE, D=TRUNCATE, x=REFERENCES, t=TRIGGER権限を持つ。<br>設定者はpostgres自身。</td>
</tr><tr>

<td>role1=r*w*/postgres	</td>	<td>role1はr=SELECT,w=UPDATE権限を持つ。 <br>
				さらに、"r*","w*"なので、SELECT権限とUPDATE権限を他のユーザorロールに付与できる。設定者はpostgres。
</tr><tr>
<td>aid: role2=r/role1<br>bid: role2=r/role1 </td>	<td>role2はカラムaidとbidにr=SELECT権限のみ持つ。<br>
		設定者はrole1。</td>
</tr></table>

<br>

<blockquote>
<p>
※1:  postgresは所有者なので、すべての権限に"*"が付いているが省略されている。<br>正確に表示するなら"a*r*w*D*x*t*"
</p>
</blockquote>

<br>
<br>


<p>
PostgreSQLには、
データベースユーザ/ロールのテーブルやスキーマへのアクセス権限を調べる関数が多数サポートされています。
関数の一覧は<a href="./func-11.html">[<7-30>]</a>を参照してください。
<br>
例えば、
ロールrole1のテーブルpgbench_accountsにおけるSELECT権限の有無は、
関数has_table_privilege()で判ります。
</p>

<pre>
sampledb=# SELECT has_table_privilege('role1',
sampledb(#                           'pgbench_accounts', 'select');
 has_table_privilege
---------------------
 t
(1 row)
</pre>

<br>

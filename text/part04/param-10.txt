%FILE internal/param-10.html
%LASTMOD
%KEY pgsql-param10

%TITLE <a href="https://www.postgresql.org/docs/current/runtime-config-vacuum.html" target="_blank" rel="noopener noreferrer">AUTOVACUUM	VACUUM PARAMETERS</a>


<table border=1>
<caption>[<設定項目一覧>]</caption>
<tr bgcolor="#cccccc">
<th><sup>変更<br>可能性</sup></th> <th>設定項目</th>	<th>パラメータ<br>[デフォルト]</th>		<th>説明</th>

</tr><tr bgcolor="#eeeeee">
<th colspan=4 align=left>Autovacuum</th>

</tr><tr>
<td>△	</td>	<td>autovacuum		</td>	<td>	on/off[on]	</td>	<td>AUTOVACUUMを有効とするか否か。デフォルトはon</td>

</tr><tr>
<td>×</td>
<td>	autovacuum_worker_slots	</td>	<td>	整数[16]		</td>	<td>autovacuum worker process用に予約するバックエンド スロットの数。PG18から</td>

</tr><tr>
<td>×</td>	<td>	autovacuum_max_workers	</td>	<td>	整数[3]		</td>	<td>	同時に起動するWorkerプロセスの最大数</td>
</tr><tr>
<td>△	</td>	<td>autovacuum_naptime	</td>	<td>	整数[1m]	</td>	<td>	AUTOVACUUMを起動する時間間隔。単位は[秒][分][時]など</td>
</tr><tr>
<td>△	</td>	<td>autovacuum_vacuum_threshold	</td>	<td>整数[50]	</td>	<td>	詳細は本文</td>

</tr><tr>
<td>△</td>	<td>autovacuum_vacuum_insert_threshold	</td>	<td>整数[1000]	</td>	<td>autovacuum_vacuum_thresholdのINSERT版。autovacuum_vacuum_thresholdは更新と削除だが、これはINSERT。バージョン13から</td>

</tr><tr>
<td>△	</td>	<td>autovacuum_analyze_threshold	</td>	<td>整数[50]	</td>	<td>	詳細は本文</td>
</tr><tr>
<td>△	</td>	<td>autovacuum_vacuum_scale_factor	</td>	<td>(0.0-1.0)[0.2]	</td>	<td>	詳細は本文</td>

</tr><tr>
<td>△	</td>	<td>autovacuum_vacuum_insert_scale_factor	</td>	<td>(0.0-1.0)[0.2]	</td>	<td>autovacuum_vacuum_scale_factorのINSERT版。autovacuum_vacuum_scale_factorは更新と削除だがこれはINSERT。バージョン13から</td>

</tr><tr>
<td>△	</td>	<td>autovacuum_analyze_scale_factor	</td>	<td>(0.0-1.0)[0.1]	</td>	<td>	詳細は本文</td>


</tr><tr>
<td>△	</td>	<td>
autovacuum_vacuum_max_threshold	</td>	<td>integer[100,000,000]	</td>	<td>autovacuumを起動するために必要な更新または削除されたタプルの最大数。PG18から</td>


</tr><tr>
<td>× </td><td>	autovacuum_freeze_max_age	</td>	<td>整数[200000000]	</td><td>DB毎に、FREEZEしていない最古のXIDと現時点のXIDの差がこの値以上になったら、vacuum_freeze_min_age以前のt_xminを持つタプルをFREEZEする</td>

</tr><tr>
<td>×</td>	<td>	autovacuum_multixact_freeze_max_age	</td>	<td>整数 [400000000]</td>	<td>トランザクションID周回防止でVACUUMが強制実行される前までに、テーブルのpg_class.relminmxid フィールドが到達できる（マルチトランザクションにおける）最大値。バージョン13から</td>

</tr><tr>
<td>△	</td>	<td>autovacuum_vacuum_cost_delay	</td>	<td>整数(-1-1000)[20ms]	</td>	<td>AUTOVACUUMでのVACUUM遅延機能の設定。'-1'ならvacuum_cost_delayと同じ。</td>
</tr><tr>
<td>△	</td>	<td>autovacuum_vacuum_cost_limit	</td>	<td>整数(-1-10000)[-1]	</td>	<td>AUTOVACUUMでのVACUUM遅延機能の設定。'-1'ならvacuum_cost_limitと同じ。</td>


</tr><tr bgcolor="#eeeeee">
<th colspan=4 align=left>Cost-based Vacuum Delay</th>


</tr><tr bgcolor="#eeeeee">
<th colspan=4 align=left>Default Behavior</th>

</tr><tr>
<td>◎</td>	<td>	vacuum_cost_delay		</td>	<td>整数(0-1000)[0ms]	</td>	<td>	VACUUM,ANALYZE処理を休止する時間。単位は[ミリ秒]。0なら遅延機能が無効</td>
</tr><tr>
<td>◎</td>	<td>	vacuum_cost_page_hit	</td>	<td>	整数(0-10000)[1]</td>	<td>	共有バッファのデータにキャッシュヒットした場合のコスト</td>
</tr><tr>
<td>◎</td>	<td>	vacuum_cost_page_miss	</td>	<td>	整数(0-10000)[10]	</td>	<td>共有バッファのデータにキャッシュミスした場合のコスト</td>
</tr><tr>
<td>◎</td>	<td>	vacuum_cost_page_dirty	</td>	<td>	整数(0-10000)[20]	</td>	<td>共有バッファのデータを書き換えた場合のコスト</td>
</tr><tr>
<td>◎</td>	<td>	vacuum_cost_limit	</td>	<td>	整数(0-10000)[200]	</td>	<td>累積されたコストがこの値を超えると、vacuum_cost_delayで設定した時間だけ、VACUUMやANALYZEを休止する</td>

</tr><tr>
<td>◎</td>
<td>	vacuum_buffer_usage_limit	</td>	<td>	整数(128kB-16GB)[256kB]	</td>	<td>Vacuum処理がshared_bufferを使用できるリミット。バージョン16から</td>

</tr><tr>
<td>◎ </td><td>	vacuum_truncate  </td><td>on/off[on]	 </td><td></td>

</tr><tr bgcolor="#eeeeee">
<th colspan=4 align=left>Freezing</th>

</tr><tr>
<td>◎ </td><td>	vacuum_freeze_table_age	 </td><td>整数[150000000]	 </td><td></td>
</tr><tr>
<td>◎ </td><td>	vacuum_freeze_min_age	 </td><td>整数[50000000]	 </td><td></td>

</tr><tr>
<td>◎</td>	<td>vacuum_failsafe_age</td>	<td></td>	<td>バージョン14から</td>

</tr><tr>
<td>◎</td>	<td>vacuum_multixact_freeze_table_age</td>	<td></td>	<td></td>


</tr><tr>
<td>◎</td>	<td>vacuum_multixact_freeze_min_age</td>	<td></td>	<td></td>

</tr><tr>
<td>◎</td>	<td>vacuum_multixact_failsafe_age</td>	<td></td>	<td>バージョン14から</td>

</tr><tr>
<td>◎</td>	<td>vacuum_max_eager_freeze_failure_rate</td>	<td></td>	<td>バージョン18から</td>

</tr></table>

<br>


<table><tr bgcolor="#cccccc">
<th>記号</th>  <th>意味</th>
</tr><tr>
<td> ◎ </td>	<td>一般ユーザ/ロールが変更可能</td>
</tr><tr>
<td> ○ </td>	<td>スーパーユーザだけが変更可能</td>
</tr><tr>
<td> △ </td>	<td>設定ファイルを書き換え、pg_ctlをreloadモードで実行すれば変更可能(セッションやトランザクションは保持したまま、パラメータ値が変更できる)</td>
</tr><tr>
<td> × </td>	<td>再起動しないと変更できない</td>
</tr></table>

<br>


%CHAPTER 解説

<p>
バージョン8.1からAUTOVACUUMが実装されました。
</p>

<p>
autovacuum_naptimeで設定された周期でworkerプロセスが起動し、VACUUM処理を行います。その際、以下の設定パラメータで指定された条件でVACUUM処理やANALYZE処理を行うか否かを決めます。
<br>
またautovacuum_vacuum_cost_delayとautovacuum_vacuum_cost_limitで、バックグランドで実行するAUTOVACUUM処理が過負荷にならないように調整します。
</p>

<p>
バージョン8.3以降はデフォルトで有効ですが、AUTOVACUUMが利用する稼働統計情報を収集するためにtrack_countsも有効でなければなりません(デフォルトは有効)。
</p>



<p>
・autovacuum_vacuum_cost_delay, autovacuum_vacuum_cost_limit
<br>
autovacuum_vacuum_cost_delayとautovacuum_vacuum_cost_limitは、それぞれVACUUM処理の遅延機能([<2-07>]参照)における設定パラメータvacuum_cost_delayとvacuum_cost_limitの、AUTOVACUUM版です。
<br>
VACUUM処理の遅延機能でのパラメータ値と同じでよければ'-1'を設定します。
例えば、vacuum_cost_delayの値と同じでよければ、'autovacuum_vacuum_cost_delay = -1'とします。
</p>


%SECTION VACUUM実行条件

<p>
Autovacuumプロセスは対象とするテーブルについて、以下の3つの条件を調べ、いずれかが成立している場合にVACUUM処理を実行します。
</p>

<ol>
<li>FREEZEしていない最古のXIDと現時点のXIDの差が設定した値を超えた場合</li>
<li>dead tupleの数が設定した数を超えた場合</li>
<li>insertされたtupleの数が設定した数を超えた場合(バージョン13から)</li>
</ol>


<p>
・autovacuum_freeze_max_age
<br>
FREEZEしていない最古のXIDと現時点のXIDの差が、autovacuum_freeze_max_ageを超えた場合、VACUUM処理が起動し、FREEZE処理が行われます。
</p>

<p>
・Dead Tupleの数に関する条件
<br>
例えば1万レコードのテーブルtbl_1は、以下の式で得られるレコード数 = 2050レコード以上の更新か削除が行なわれた場合に、AUTOVACUUM処理を行います。
</p>

<pre>
autovacuum_vacuum_threshold  + autovacuum_vacuum_scale_factor * テーブル総レコード数
   = 50 + 0.2 * 10000
   = 2050
</pre>


<p>
・Insert Tupleの数に関する条件
<br>
例えば1万レコードのテーブルtbl_1は、以下の式で得られるレコード数 = 3000レコード以上のINSERTが行なわれた場合に、AUTOVACUUM処理を行います。
</p>

<pre>
autovacuum_vacuum_insert_threshold  + autovacuum_vacuum_insert_scale_factor * テーブル総レコード数
   = 1000 + 0.2 * 10000
   = 3000
</pre>



%SECTION ANALYZE実行条件

<p>
・autovacuum_analyze_threshold, autovacuum_analyze_scale_factor
<br>
Autovacuumプロセスは対象とするテーブルについて、以下の条件を調べ、成立している場合にVACUUM内でANALYZE処理を実行します。
<br>
例えば1万レコードのテーブルtbl_1は以下の式で得られるレコード数 = 1050レコード以上の更新か削除が行なわれた場合に、ANALYZE処理を行います。
</pre>

<pre>
autovacuum_analyze_threshold
      + autovacuum_analyze_scale_factor * テーブル総レコード数
   = 50 + 0.1 * 10000
   = 1050
</pre>


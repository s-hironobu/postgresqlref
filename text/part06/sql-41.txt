%FILE internal/sql-41.html
%LASTMOD
%KEY pgsql-sql41

%TITLE トランザクション <a href="https://www.postgresql.org/docs/current/sql-begin.html" target="_blank" rel="noopener noreferrer">BEGIN</a> | <a href="https://www.postgresql.org/docs/current/sql-start-transaction.html" target="_blank" rel="noopener noreferrer">START TRANSACTION</a> / <a href="https://www.postgresql.org/docs/current/sql-commit.html" target="_blank" rel="noopener noreferrer">COMMIT</a> | <a href="https://www.postgresql.org/docs/current/sql-end.html" target="_blank" rel="noopener noreferrer">END</a> / <a href="https://www.postgresql.org/docs/current/sql-abort.html" target="_blank" rel="noopener noreferrer">ABORT</a> | <a href="https://www.postgresql.org/docs/current/sql-rollback.html" target="_blank" rel="noopener noreferrer">ROLLBACK</a>



<pre>
[<書式>]

● トランザクションの開始
BEGIN [ WORK | TRANSACTION ] [ transaction_mode [, ...] ]
START TRANSACTION [ transaction_mode [, ...] ]

● トランザクションのコミット
COMMIT [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ]
END [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ]

● トランザクションのロールバック/アボート
ROLLBACK [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ]
ABORT [ WORK | TRANSACTION ] [ AND [ NO ] CHAIN ]

● トランザクションの隔離レベル設定
SET TRANSACTION transaction_mode [, ...]
SET TRANSACTION SNAPSHOT snapshot_id
SET SESSION CHARACTERISTICS AS TRANSACTION transaction_mode [, ...]


● where transaction_mode is one of:

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE

● トランザクション隔離レベルの確認
SHOW TRANSACTION ISOLATION LEVEL
</pre>


<table>
<caption>オプション</caption>
<tr bgcolor="#cccccc">
<th>オプション</th>	<th>説明</th>
</tr><tr>
<td>READ WRITE</td>	<td>トランザクション内でデータ更新する可能性がある場合に設定する。デフォルト</td>
</tr><tr>
<td>READ ONLY</td>	<td>トランザクション内でデータ更新せず検索のみ行う場合に設定する。設定パラメータdefault_transaction_read_onlyが有効(on)の場合、デフォルト</td>
</tr><tr>
<td>AND CHAIN</td>	<td>COMMIT後、すぐに次のトランザクションが発行される。ラフに言えば"COMMIT; BEGIN;"を実行する感じ。</td>
</tr><tr>
<td>DEFERRABLE</td>	<td></td>

</tr></table>

<br>

%CHAPTER 解説

<p>
PostgreSQLはトランザクションをサポートしています。
しかしネステッドトランザクションはサポートしていません(トランザクションブロック中にトランザクションブロックを入れることはできない)。
</p>

<p>
隔離レベルのデフォルト値は設定パラメータdefault_transaction_isolationに設定します。デフォルトは'READ COMMITTED'です。
</p>

<p>
•隔離レベルの変遷
<br>
バージョン9.0までは"SERIALIZABLE"と"READ COMMITTED"の２レベルをサポート、バージョン9.1から"REPEATABLE READ"を加えた３レベルをサポートしました。
</p>
<p>
ただし以下の点に注意してください。
<br>
バージョン9.0までの"SERIALIZABLE"の実装は簡略化されており、その挙動は実は"REPEATABLE READ"でした。
<br>
バージョン9.1で実装が改善され、それまでの"SERIALIZABLE"は"REPEATABLE READ"と呼び名を変え、
新たに仕様に則った"SERIALIZABLE"が実装されました。
<br>
つまり、隔離レベルの"呼称"としては"REPEATABLE READ"が追加されましたが、機能としては"真のSERIALIZABLE"が追加されたことになります。
</p>

<table border=1>
<caption>[<表6-10>] 隔離レベルの変遷</caption>
<tr bgcolor="#cccccc">
<th>SQL仕様上の隔離レベル</th>	<th>バージョン9.0までの呼称</th>	<th>バージョン9.1からの呼称</th>
</tr><tr>
<td>SERIALIZABLE</td>	<td>(機能的には未実装)</td>	<td>SERIALIZABLE(バージョン9.1で実装)</td>
</tr><tr>
<td>REPEATABLE READ</td>	<td>SERIALIZABLE</td>	<td>REPEATABLE READ(機能的にはver9.0までのSERIALIZABLEと同じ)</td>
</tr><tr>
<td>READ COMMITTED</td>		<td>READ COMMITTED</td>	<td>READ COMMITTED</td>
</tr></table>

<br><br>

<p>
• トランザクション隔離レベルの設定
<br>
START TRANSACTION文はBEGIN 文と同じくトランザクションを開始するコマンドですが、オプションとしてトランザクションの隔離レベルを設定できます。またバージョン8.0からBEGIN文もオプションとして設定できるようになりました。
<br>
また、SET TRANSACTION ISOLATION LEVEL文を使えば、セッション全体のトランザクション隔離レベルのデフォルト値を設定できます。
</p>


%CHAPTER 実行例

<p>
次に示す3例は、いずれもトランザクションの隔離レベルとして'SERIALIZABLE'を設定します。
</p>

<p>
(1)START TRANSACTION ISOLATION LEVEL文を使ったトランザクションの開始
</p>
<pre>
sampledb=#  START TRANSACTION ISOLATION LEVEL SERIALIZABLE;
START TRANSACTION
</pre>

<p>
(2)BEGIN文とSET TRANSACTION ISOLATION LEVEL文を使ったトランザクションの開始
</p>

<pre>
sampledb=# BEGIN;
BEGIN
sampledb=# SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SET
</pre>

<p>
(3)BEGIN文にトランザクションの隔離レベルを設定
</p>

<pre>
sampledb=# BEGIN ISOLATION LEVEL SERIALIZABLE;
BEGIN
</pre>

<p>
・AND　CHAIN
<br>
AND　CHAINの使用例を示す。
</p>

<pre>
postgres=# begin;
BEGIN
postgres=*# select 1;
 ?column?
----------
        1
(1 row)

postgres=*# commit and chain;
COMMIT
postgres=*# select 2;
 ?column?
----------
        2
(1 row)

postgres=*# commit;
COMMIT
</pre>


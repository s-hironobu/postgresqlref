%FILE internal/sql-22.html
%LASTMOD
%KEY pgsql-sql22

%TITLE グループ化  <a href="https://www.postgresql.org/docs/current/sql-select.html#SQL-GROUPBY" target="_blank" rel="noopener noreferrer">GROUP BY句</a>, <a href="https://www.postgresql.org/docs/current/sql-select.html#SQL-HAVING" target="_blank" rel="noopener noreferrer">HAVING句</a>  / <a href="https://www.postgresql.org/docs/current/queries-table-expressions.html#QUERIES-GROUP" target="_blank" rel="noopener noreferrer">GROUP BY and HAVING Clauses</a>


<pre>
[<書式>]

SELECT select_list
       FROM ...
       [WHERE ...]
       GROUP BY [ ALL | DISTINCT ] grouping_element [, ...]
       HAVING condition [, ...]


・ grouping_element can be one of:

    ( )
    expression
    ( expression [, ...] )
    ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )
    CUBE ( { expression | ( expression [, ...] ) } [, ...] )
    GROUPING SETS ( grouping_element [, ...] )

</pre>
<br>

<table>
<caption>パラメータ</caption>
<tr bgcolor="#cccccc">
<th>パラメータ</th>	<th>説明</th>
</tr><tr>
<td>select_list</td>	<td>選択するカラムのリスト</td>
</tr><tr>
<td>expression</td>	<td>グループ化のキーとなるカラム、もしくは式</td>
</tr><tr>
<td>condition</td>	<td>グループ化した結果に対する条件式</td>
</tr></table>

<br>
<p>
<a href="https://www.postgresql.org/docs/current/queries-table-expressions.html#QUERIES-GROUPING-SETS"_blank" rel="noopener noreferrer">GROUPING SETS, CUBE, ROLLUP</a>の説明は省略する。詳細は本家ドキュメント参照。
</p>
<br>

%CHAPTER 解説

<p>
・GROUP BY句
<br>
同じ値を持つ複数のレコードを1レコードにまとめて表示します。
</p>

<p>
・HAVING句
<br>
GROUP BY句でグループ化した結果に対し、設定した条件に合うレコードのみ表示します。
HAVING句とWHERE句の相違を次に示します。
</p>

<ul>
<li>HAVING句：グループ化した結果に対して条件判断を行う</li>
<li>WHERE句：グループ化する前のテーブルに対して条件判断を行う</li>
</ul>


<br>

<p>
<a href="https://www.postgresql.org/docs/current/queries-table-expressions.html#QUERIES-GROUPING-SETS"_blank" rel="noopener noreferrer">GROUPING SETS, CUBE, ROLLUP</a>の説明は省略する。詳細は本家ドキュメント参照。
</p>


%CHAPTER 実行例

<p>
・グループ化を利用した検索
<br>
注文表orderlistに対し、品番item_idをキーとしてグループ化した結果を表示します。
</p>

<pre>
sampledb=# SELECT orderid AS "注文番号", item_id AS "品番", orders AS "注文数"
sampledb-#            FROM orderlist;
 注文番号 | 品番 | 注文数
----------+------+--------
        1 |    1 |     10
        2 |    2 |      5
        4 |    3 |      4
        3 |    2 |     12
        5 |    3 |      6
(5 rows)

sampledb=# SELECT item_id AS "品番", count(*) AS "注文件数" FROM orderlist
sampledb-#          GROUP BY item_id;
 品番 | 注文件数
------+----------
    3 |        2
    2 |        2
    1 |        1
(3 rows)
</pre>
<br>

<p>
次に、品番item_idをキーとしてグループ化し、品番ごとに注文数を集計して表示します。
</p>

<pre>
sampledb=# SELECT item_id AS "品番", sum(orders) AS "総注文数" FROM orderlist
sampledb-#       GROUP BY item_id;
 品番 | 総注文数
------+----------
    3 |       10
    2 |       17
    1 |       10
(3 rows)
</pre>
<br>

<p>
・HAVING句による検索条件の指定
<br>
注文件数が2件以上の品番のみ表示します。
</p>

<pre>
sampledb=# SELECT item_id AS "品番", count(*) AS "注文件数"
sampledb-#      FROM orderlist  GROUP BY item_id HAVING 2 <= count(*) ;
 品番 | 注文件数
------+----------
    3 |        2
    2 |        2
(2 rows)
</pre>
<br>


<p>
・関数の返り値をグループ化
<br>
PostgreSQLは(複数の)カラムの値を使った関数の返り値を、GROUP BY句に設定できます。
<br>
まず、3科目の得点表test_resultについて、総得点と人数を表示します。
</p>

<pre>
sampledb=# SELECT * FROM test_result;
 name  | math | english | physics
-------+------+---------+---------
 Alice |    4 |       5 |       3
 Bobby |    2 |       3 |       3
 Candy |    5 |       3 |       4
 Duke  |    2 |       4 |       2
 Eddie |    4 |       4 |       3
(5 rows)

sampledb=# SELECT sum(math + english + physics) AS "総得点",count(*) AS "人数"
sampledb-#      FROM test_result GROUP BY math + english + physics;
 総得点 | 人数
--------+------
     24 |    2
     11 |    1
     16 |    2
(3 rows)
</pre>
<br>

<p>
次に平均点(四捨五入)と、その点数の人数を表示します。
</p>

<pre>
sampledb=# SELECT round((math + english + physics)/3) AS "平均点",
sampledb-#     count(*) AS "人数"
sampledb-#     FROM test_result  GROUP BY round((math + english + physics)/3);
 平均点 | 人数
--------+------
      4 |    2
      2 |    2
      3 |    1
(3 rows)
</pre>
<br>

%FILE internal/sql-49.html
%LASTMOD
%KEY pgsql-sql49

%TITLE <a href="https://www.postgresql.org/docs/current/sql-copy.html" target="_blank" rel="noopener noreferrer">ファイルからテーブルへ	COPY FROM(インポート) </a>

<pre>
[<書式>]

COPY table_name [ ( column_name [, ...] ) ]
    FROM { 'filename' | PROGRAM 'command' | STDIN }
    [ [ WITH ] ( option [, ...] ) ]
    [ WHERE condition ]

where option can be one of:

    FORMAT format_name
    FREEZE [ boolean ]
    DELIMITER 'delimiter_character'
    NULL 'null_string'
    DEFAULT 'default_string'
    HEADER [ boolean | MATCH ]
    QUOTE 'quote_character'
    ESCAPE 'escape_character'
    FORCE_NOT_NULL ( column_name [, ...] )
    FORCE_NULL ( column_name [, ...] )
    ON_ERROR [ stop | ignore ]
    ENCODING 'encoding_name'
    LOG_VERBOSITY [ default | verbose ]
</pre>
<br>

<table>
<caption>パラメータ</caption>
<tr bgcolor="#cccccc">
<th>パラメータ</th>	<th>説明</th>
</tr><tr>
<td>table_name</td>	<td>コピー先のテーブル名</td>
</tr><tr>
<td>column_name</td>	<td>コピーするカラム名。設定しない場合はすべてのカラム</td>
</tr><tr>
<td>filename</td>	<td>絶対パス表示によるデータファイル名</td>
</tr><tr>
<td>STDIN	</td>	<td>標準入力から入力</td>
</tr></table>

<br>


<table>
<caption>オプション</caption>
<tr bgcolor="#cccccc">
<th>オプション</th>	<th>説明</th>
</tr><tr>
<td>FORMAT format_name</td>	<td>text,csv,binary [text]</td>

</tr><tr>
<td>FREEZE [ boolean ]</td>	<td>VACUUM FREEZE後にデータを読み込む</td>
</tr><tr>
<td>DEFAULT 'default_string'</td>	<td>デフォルト値'default_string'を設定。バージョン16から</td>
</tr><tr>
<td>DELIMITER [ AS ] 'delimiter'</td>	<td>入力ファイルのレコードの区切り文字を指定。[タブスペースか、任意の数の空白文字列]</td>
</tr><tr>
<td>NULL [ AS ] 'null_string' ]</td>	<td>NULLをあらわす文字列を指定。[テキスト形式は\N、CSV形式は引用符のない空文字] </td>
</tr><tr>
<td>HEADER</td>	<td> 第1行目を無視する。CSV形式で、第1行目にヘッダ情報(カラム名)がある場合に設定する</td>
</tr><tr>
<td>QUOTE [ AS ] 'quote'</td>	<td>CSV形式の引用符を指定。["]</td>
</tr><tr>
<td>ESCAPE [ AS ] 'escape'</td>	<td>CSV形式でのエスケープ文字を指定。[\]</td>

</tr><tr>
<td>FORCE_NOT_NULL ( column_name [, ...] )</td>	<td>CSV形式で、NULLがないものとしてデータをcolumnに読み込む。この場合、NULLは空文字として読み込まれる</td>

</tr><tr>
<td>FORCE_NULL ( column_name [, ...] )</td>	<td>CSV形式で、たとえ引用符で囲まれていようとも、NULLはNULLとしてcolumnに読み込む。</td>

</tr><tr>
<td>ON_ERROR [stop | ignore]</td>	<td>(FORMATがtextかcsvのとき、)データの型変換でエラーが発生した時に停止stopするか、無視ignoreするか。デフォルトstop。バージョン17から</td>

</tr><tr>
<td>ENCODING 'encoding_name'</td>	<td>ファイルのエンコーディングencoding_nameを指定</td>

</tr><tr>
<td>LOG_VERBOSITY [default | verbose]</td>	<td>ON_ERROR=stopの時のみ有効。バージョン17から</td>

</tr></table>

<br>

%CHAPTER 解説

<p>
COPY FROM文で、(サーバ上の)ファイルからテーブルへデータを読み込みます。
</p>

<p>
COPY FROM文の実行には次の点に注意してください。
<ol>
<li>データファイルとそのファイルのあるディレクトリは、PostgreSQLサーバの所有者(postgres)が読み込み可能でなければならない</li>
<li>データファイルは(サーバ上の)絶対パスで指定</li>
</ol>

<p>
・ 読み込み形式
<br>
COPY FROM文の出力形式は以下の3種類です。
</p>

<ol>
<li>テキスト形式</li>
<p>
読み込む際は、個々のデータファイルに合わせて、区切り文字(デフォルトはタブスペースなど)やNULL値(デフォルトは\N)を指定する。
NULLの他に、COPY FROM文は[<表6-13>]に示すバックスラッシュを含む特殊文字を読み込める。
</p>

<table border=1>
<caption>[<表6-13>] COPY FROM文が読み込み可能なバックスラッシュを含む特殊文字</caption>
<tr bgcolor="#cccccc">
<th>文字の並び</th>	<th>説明</th>
</tr><tr>
<td>\b	</td>	<td>バックスペース(ASCII 8)</td>
</tr><tr>
<td>\f	</td>	<td>改ページ(ASCII 12)</td>
</tr><tr>
<td>\n	</td>	<td>改行(ASCII 10)</td>
</tr><tr>
<td>\r	</td>	<td>復帰(ASCII 13)</td>
</tr><tr>
<td>\t	</td>	<td>タブ(ASCII 9)</td>
</tr><tr>
<td>\v	</td>	<td>垂直タブ(ASCII 11)</td>
</tr><tr>
<td>\8進数	</td>	<td>文字コード番号を直接指定。例:\101 = "A", \102 = "B"</td>
</tr><tr>
<td>\x16進数</td>	<td>文字コード番号を直接指定。例:\x41 = "A", \x42 = "B"</td>
</tr></table>

<br>


<li>バイナリ形式</li>
<p>
(COPY TO文で書き出した)バイナリ形式のデータを読み込める。
フォーマットの詳細はPostgreSQL付属のドキュメント「SQLコマンド COPY」参照。
</p>


<li>CSV形式</li>
<p>
CSV形式のファイルを読み込める。
</p>

</ol>

<p>
・ メタコマンド\copyとの違い
<br>
メタコマンド\copyでもデータのコピーが可能です(<a href="./psql-09.html">[<5-09>]</a>参照)。
\copyとCOPY文の違いは、\copyがpsqlを起動したホスト上のファイルを操作するのに対し、COPY文はPostgreSQLサーバ上のファイルを操作することです。
</p>

%CHAPTER 実行例

<p>
・テキスト形式のデータ読み込み
<br>
以下に示すデータファイル'/usr/local/pgsql/sample.txt'を、テーブルsampleにコピーします。
<br>
デフォルトの動作の場合、データの不備などによってコピー中にエラーが発生すると処理が止まります。
その場合、COPY文はロールバックされ、テーブルにデータは入りません。
</p>

<pre>
$ cat sample.txt
1	Alice	30	manager
2	Bob	40	engineer
3	Candy	25	engineer
</pre>
<br>

<pre>
testdb=# COPY sample FROM '/usr/local/pgsql/sample.txt';
COPY 3

testdb=# SELECT * FROM sample;
 id | name  | age |  title
----+-------+-----+----------
  1 | Alice |  30 | manager
  2 | Bob   |  40 | engineer
  3 | Candy |  25 | engineer
(3 rows)
</pre>
<br>

<p>
バージョン17から、読み込み時の型変換でエラーが発生した場合、ON_ERRORオプションでそのエラーをスキップできるようになりました。
</p>

<p>
例えば、２行目にデータ型がテーブルと合わないデータがあったとしても、
ON_ERRORにignoreを設定した場合はその行をスキップして最後までデータを読み込みます。
</p>

<pre>
$ cat sample_bad.txt
1	Alice	30	manager
2	Bob	fourty	engineer
3	Candy	25	engineer
</pre>
<br>

<pre>
testdb=# COPY sample FROM '/usr/local/pgsql/sample_bad.txt' (FORMAT text, ON_ERROR ignore);
NOTICE:  1 row was skipped due to data type incompatibility
COPY 2
testdb=# SELECT * FROM sample;
 id | name  | age |  title
----+-------+-----+----------
  1 | Alice |  30 | manager
  3 | Candy |  25 | engineer
(2 rows)
</pre>


<p>
・バイナリ形式のデータ読み込み
<br>
バイナリ形式のデータファイル'/usr/local/pgsql/sample.bin'を、テーブルsampleにコピーします。
</p>

<pre>
$ od -c sample.bin
0000000    P   G   C   O   P   Y  \n 377  \r  \n  \0  \0  \0  \0  \0  \0
0000020   \0  \0  \0  \0 004  \0  \0  \0 004  \0  \0  \0 001  \0  \0  \0
0000040  005   A   l   i   c   e  \0  \0  \0 004  \0  \0  \0 036  \0  \0
0000060   \0  \a   m   a   n   a   g   e   r  \0 004  \0  \0  \0 004  \0
0000100   \0  \0 002  \0  \0  \0 003   B   o   b  \0  \0  \0 004  \0  \0
0000120   \0   (  \0  \0  \0  \b   e   n   g   i   n   e   e   r  \0 004
0000140   \0  \0  \0 004  \0  \0  \0 003  \0  \0  \0 005   C   a   n   d
0000160    y  \0  \0  \0 004  \0  \0  \0 031  \0  \0  \0  \b   e   n   g
0000200    i   n   e   e   r 377 377
0000207
</pre>
<br>

<pre>
testdb=# COPY sample FROM '/usr/local/pgsql/sample.bin' (FORMAT binary);
COPY 3
</pre>
<br>

<p>
・CSV形式のデータ読み込み
<br>
CSV形式のファイル'/usr/local/pgsql/sample.csv'をテーブルsampleに読み込みます。
</p>

<pre>
$ cat sample.csv
1,Alice,30,manager
2,Bob,40,engineer
3,Candy,25,engineer
</pre>
<br>

<pre>
testdb=# COPY sample FROM '/usr/local/pgsql/sample.csv' (FORMAT csv);
COPY 3
testdb=# SELECT * FROM sample;
 id | name  | age |  title
----+-------+-----+----------
  1 | Alice |  30 | manager
  2 | Bob   |  40 | engineer
  3 | Candy |  25 | engineer
(3 rows)
</pre>
<br>

<p>
ヘッダ情報(第1行がカラム名)付きのCSV形式のファイル'/usr/local/pgsql/sample2.csv'をテーブルsampleに読み込みます。
</p>

<pre>
$ cat sample2.csv
id,name,age,title
1,Alice,30,manager
2,Bob,40,engineer
3,Candy,25,engineer
</pre>
<br>

<pre>
testdb=# COPY sample FROM '/usr/local/pgsql/sample2.csv' (FORMAT csv, HEADER true);
COPY 3
</pre>
<br>

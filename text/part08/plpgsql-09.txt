%FILE internal/plpgsql-09.html
%LASTMOD
%KEY pgsql-plpgsql09

%TITLE <a href="https://www.postgresql.org/docs/current/plpgsql-control-structures.html#PLPGSQL-STATEMENTS-RETURNING" target="_blank" rel="noopener noreferrer">RETURN NEXT / RETURN QUERY</a>

<pre>
[<書式>]

	   RETURN NEXT value

	   RETURN QUERY query

	   RETURN QUERY EXECUTE command-string [ USING expression [, ... ] ];

</pre>

<br>

<table>
<caption>パラメータ</caption>
<tr bgcolor="#cccccc">
<th>パラメータ</th>	<th>説明</th>
</tr><tr>
<td>value</td>	<td>返り値</td>
</tr><tr>
<td>query</td>	<td>クエリ</td>
</tr><tr>
<td>command_string</td>	<td>クエリのテキスト</td>
</tr></table>

<br>


%CHAPTER 解説

%SECTION RETURN NEXT

<p>
RETURN NEXT文は、設定された値を一時的な保管場所に保存して次の処理に進みます。この文は値を保存し続けるだけなので、関数の終了時に引数のないRETURN文を実行し、保存してきた値を返さなければなりません。
</p>

[RETURN NEXT文の使い方]
 <pre>
	LOOP
	     statemants;
	     RETURN NEXT ret; /* retの値を保存し続ける */
        END LOOP;

        RETURN; /* 保存された値を返し、関数を終了 */
</pre>
<br>

<p>
以下に、RETURN NEXTを使った関数item_names()を定義します。
</p>


<pre>
CREATE FUNCTION item_names() RETURNS SETOF text AS
 $$
   DECLARE
     myname text;     /* 商品名を格納 */
     count  integer;  /* ループのカウンタ */
     max_id integer;  /* 商品idの最大値を格納 */
   BEGIN
     /* 商品idの最小値と最大値を、変数count,max_idに格納 */
     SELECT INTO count  min(id) FROM itemlist;
     SELECT INTO max_id max(id) FROM itemlist;

     LOOP
       /* すべての商品idの処理が終ったら、ループを脱出 */
       EXIT WHEN max_id < count;

       /* 条件に一致した商品名を変数mynameに格納 */
       SELECT INTO myname name FROM itemlist WHERE  id = count;

       IF FOUND THEN
	  /* 変数mynameに格納された値を保存し、次の処理へ進む */
	  RETURN NEXT myname;
	END IF;

	/* カウンタの値をインクリメント */
	count := count + 1;
    END LOOP;

    /* 保存された値を返し、関数を終了 */
    RETURN;
  END;
 $$
LANGUAGE PLpgSQL;
</pre>

<br>


<p>
RETURN NEXT文を使った関数を呼び出すには、SELECT文のFROM句に設定しなければなりません。
</p>

<br>

<pre>
sample=# SELECT * FROM item_names();
</pre>

<br>

<p>
念のため、関数をFROM句に設定しないとどうなるか、示しておきます。
</p>

<pre>
[間違った呼び出し方法]

sampledb=# SELECT item_names();
ERROR:  set-valued function called in context that cannot accept a set
CONTEXT:  PL/pgSQL function "item_names" line 19 at return next
ERROR:  set-valued function called in context that cannot accept a set
CONTEXT:  PL/pgSQL function "item_names" line 19 at return next
</pre>

<br>


%SECTION RETURN QUERY

<p>
SQLを実行するだけで結果が得られる場合、RETURN QUERYのほうがより簡単に実装できます。以下に、上で定義したitem_names()をRETURN QUERYを使って書き換えた例を示します。
</p>

<pre>
CREATE OR REPLACE FUNCTION item_names() RETURNS SETOF text AS
 $$
   DECLARE
   BEGIN
     RETURN QUERY SELECT name FROM itemlist;
    RETURN;
  END;
 $$
LANGUAGE PLpgSQL;
</pre>

<br>
